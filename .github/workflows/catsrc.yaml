#
# Copyright 2022 IBM Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
name: catsrc

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Tag for the resulting catalog source image"
        required: false
        default: "default"
      force:
        description: "Force build even if no changes in images"
        required: true
        default: "false"
      bundles:
        description: "Images of other bundles to be included in CatalogSource"
        required: false
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  GO_VERSION: "1.18.1"
  GOLANGCI_VERSION: "v1.45"

jobs:
  build-ibm-crossplane-catsrc:
    name: Build ibm-crossplane Catalog Source
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout ibm-crossplane-operator
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}
          submodules: recursive

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        
      - name: Check docker
        id: docker
        run: docker version

      - name: Login to Artifactory
        uses: docker/login-action@v1
        with:
          registry: hyc-cloud-private-scratch-docker-local.artifactory.swg-devops.com/ibmcom
          username: ${{ secrets.ARTIFACTORY_USER }}
          password: ${{ secrets.ARTIFACTORY_TOKEN }}

      - name: Login to Artifactory
        uses: docker/login-action@v1
        with:
          registry: hyc-cloud-private-edge-docker-local.artifactory.swg-devops.com/ibmcom
          username: ${{ secrets.ARTIFACTORY_USER }}
          password: ${{ secrets.ARTIFACTORY_TOKEN }}

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Find the Go Build Cache
        id: go
        run: echo "::set-output name=cache::$(go env GOCACHE)"

      - name: Cache the Go Build Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.go.outputs.cache }}
          key: ${{ runner.os }}-build-check-diff-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-build-check-diff-

      - name: Cache Go Dependencies
        uses: actions/cache@v2
        with:
          path: .work/pkg
          key: ${{ runner.os }}-pkg-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-pkg-

      - name: Build ibm-crossplane-operator images
        run: make images

      - name: Build Catalog Source
        env:
          ARTIFACTORY_TOKEN: ${{ secrets.ARTIFACTORY_TOKEN }}
          ARTIFACTORY_USER: ${{ secrets.ARTIFACTORY_USER }}
        run: |
          if [[ "${{ github.event.inputs.tag }}" != "" ]]; then OPTIONS="-t ${{ github.event.inputs.tag }}"; fi
          if [[ "${{ github.event.inputs.force }}" == "true" ]]; then OPTIONS="$OPTIONS -f"; fi
          if [[ "${{ github.event.inputs.bundles }}" != "" ]]; then OPTIONS="$OPTIONS -b ${{ github.event.inputs.bundles }}"; fi
          ./common/scripts/build_catsrc.sh $OPTIONS | tee ./build_logs.txt

      - name: Archive logs
        uses: actions/upload-artifact@v2
        with:
          name: catsrc build
          path: ./*.txt
